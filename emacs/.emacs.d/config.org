#+title: TJB's Literate Emacs Configuration
#+author: Tyler J. Brough 
#+email: broughtj@gmail.com
#+language: en
#+options: ':t toc:nil num:t author:t email:t
#+startup: content indent
#+macro: latest-export-date (eval (format-time-string "%F %T %z"))
#+macro: word-count (eval (count-words (point-min) (point-max)))

* /Notice/

I am trying to follow [[https://protesilaos.com/][Prot's]] configuration, but it is super complicated and way over my head /for now/. Prot has a nice post on [[https://protesilaos.com/codelog/2024-11-28-basic-emacs-configuration/][Emacs: a basic and capable configuration]]. My plan is to start with a literate version of his basic setup and then work my way forward as I learn and grow into the wild welter of Emacs. 

Other helpful and informative sources that I have been learning from: 

+ [[https://www.youtube.com/playlist?list=PL5--8gKSku15e8lXf7aLICFmAHQVo0KXX][DT's Configuring Emacs]] from scratch YouTube series. I especially like that he is using the [[https://github.com/progfolio/elpaca][elpaca]] package manager. 
+ Apparently the maintainer of the =straight.el= package manager now recommends =elpaca.el=. See this Reddit post: https://www.reddit.com/r/emacs/comments/1dnvp9n/elpaca_vs_straightel_is_one_clearly_better_or_is/ (for which he is also the main dev). 
+ Given that, I would imagine his setup is worth looking at as well: [[https://github.com/progfolio/.emacs.d][progfolio's .emacs.d]].
+ Also, /Systems Crafters/ also has an [[https://www.youtube.com/playlist?list=PLEoMzSkcN8oPH1au7H6B7bBJ4ZO7BXjSZ][Emacs from Scratch]] series. 
+ Prot doesn't seem to use [[https://github.com/emacs-evil/evil][Evil]], which is a must for me. So I will learn what I can from these other three setups. 

*Last revised and exported on {{{latest-export-date}}} with a word
count of {{{word-count}}}.*

* Where To Store the Configuration Files

Emacs provides lots of possibilities, starting with where to put the main configuration file. In the interest of not overwhelming the user, I am being opinionated with certain choices: 

+ =~/.emacs.d/init.el= for your configuration files.
+ If there is an =~/.emacs= file on your system, make sure to delete it (or rename it if you care about its contents). Otherwise, Emacs will prioritize that over your =~/.emacs.d/init.el=.


* Put All Auto-Generated Configuration Files in a Separate File

Emacs has a graphical interface for modifying the variables that are intended for user configuration. Instead of writing Emacs Lisp code, the user clicks on buttons and filss in forms. This interface is accessed in a variety of ways, such as from the menu bar or with the command =M-x customize=.

When the user makes a modification in this way and requests to save it, Emacs will append a code block to the user's configuration file. Putting this code in a separate file makes it easier to reason about what is written by the user and what is generated by the running session. We thus add the following to the configuration file:

#+begin_src emacs-lisp
(setq custom-file (locate-user-emacs-file "custom.el"))
(load custom-file :no-error-if-file-is-missing)
#+end_src

Here we defined the value of the variable =custom-file= to be what the function call =(locate-user-emacs-file "custom.el")= returns. 


* Set Up the =elpaca= Package Manager 

Here I am departing from Prot's basic setup because I want to jump immediately into using =elpaca= as my package manager. 
